name: Windows CI
on: [push, pull_request]

jobs:
  prepare-commit-msg:
    name: Retrive head commit message
    runs-on: ubuntu-latest
    outputs:
      HEAD_COMMIT_MSG: ${{ steps.commitMsg.outputs.HEAD_COMMIT_MSG }}
    steps:
      - uses: actions/checkout@v1
        if: github.event_name == 'pull_request'
      - name: find commit msg for PR
        id: commitMsg
        if: github.event_name == 'pull_request'
        run: echo "::set-output name=HEAD_COMMIT_MSG::$(git log --no-merges -1 --oneline)"
  check-skip:
    name: Check to skip CI
    needs: prepare-commit-msg
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') && !contains(needs.prepare-commit-msg.outputs.HEAD_COMMIT_MSG, '[ci skip]') }}
    steps:
      - run: echo "${{ github.event.head_commit.message }}"
  smoke:
    name: Smoke on Node.js v${{ matrix.node }}
    needs: check-skip
    runs-on: windows-2019
    strategy:
      matrix:
        node: [10, 12, 14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - run: npm install --production
      - run: ./bin/mocha --no-config --reporter spec test/smoke/smoke.spec.js
  prepare:
    name: Install dependencies
    runs-on: windows-2019
    needs: smoke
    steps:
      - name: Install Growl
        run: |
          echo "Installing Growl..."
          $seaURL = "https://github.com/briandunnington/growl-for-windows/releases/download/final/GrowlInstaller.exe"
          $seaPath = "$($env:HOME)\GrowlInstaller.exe"
          if (-not (Test-Path $seaPath)) {
            $webclient = New-Object Net.WebClient
            $webclient.DownloadFile($seaURL, $seaPath)
          }
          mkdir C:\GrowlInstaller | out-null
          7z x $seaPath -oC:\GrowlInstaller | out-null
          cmd /c start /wait msiexec /i C:\GrowlInstaller\Growl_v2.0.msi /quiet
          $env:path = "C:\Program Files (x86)\Growl for Windows;$env:path"
          ## Growl requires some time before it's ready to handle notifications
          echo "Starting Growl service..."
          Start-Process -NoNewWindow Growl
  test:
    name: Test on Node.js v${{ matrix.node }}
    needs: prepare
    runs-on: windows-2019
    strategy:
      matrix:
        node: [10, 12, 14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci --ignore-scripts
      - run: npm start test.node
